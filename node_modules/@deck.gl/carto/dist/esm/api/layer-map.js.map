{"version":3,"sources":["../../../src/api/layer-map.ts"],"names":["extent","rgb","scaleLinear","scaleOrdinal","scaleLog","scalePoint","scaleQuantile","scaleQuantize","scaleSqrt","format","d3Format","moment","H3HexagonLayer","MVTLayer","GeoJsonLayer","CartoTileLayer","TILE_FORMATS","assert","SCALE_FUNCS","linear","ordinal","log","point","quantile","quantize","sqrt","sharedPropMap","color","isVisible","label","textLabel","alignment","anchor","size","visConfig","enable3d","filled","opacity","strokeColor","stroked","thickness","radius","wireframe","RADIUS_DOWNSCALE","defaultProps","lineMiterLimit","lineWidthUnits","pointRadiusScale","pointRadiusUnits","rounded","wrapLongitude","mergePropMaps","a","b","getLayer","type","config","dataset","getTileLayer","hexagonId","columns","hex_id","layer","Layer","propMap","outline","geojson","lineWidthScale","coverage","elevationScale","getHexagon","d","data","tiles","tileUrl","formatTiles","URL","searchParams","get","MVT","uniqueIdProperty","domainFromAttribute","attribute","scaleType","categories","map","c","category","filter","undefined","min","max","domainFromValues","values","Set","sort","d0","d1","calculateDomain","name","tilestats","attributes","layers","find","features","properties","Array","isArray","normalizeAccessor","accessor","getColorAccessor","colors","scale","domain","range","alpha","Math","round","pow","rgba","r","g","getSizeAccessor","FORMATS","date","s","utc","integer","float","timestamp","default","String","getTextAccessor","getTextPixelOffsetAccessor","padding","signX","signY","sizeOffset","calculateOffset","_domainFromValues"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,UAArB;AACA,SAAQC,GAAR,QAAkB,UAAlB;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,SAPF,QAQO,UARP;AASA,SAAQC,MAAM,IAAIC,QAAlB,QAAiC,WAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,cAAR,EAAwBC,QAAxB,QAAuC,qBAAvC;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,MAAR,QAAqB,UAArB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAEjB,WADU;AAElBkB,EAAAA,OAAO,EAAEjB,YAFS;AAGlBkB,EAAAA,GAAG,EAAEjB,QAHa;AAIlBkB,EAAAA,KAAK,EAAEjB,UAJW;AAKlBkB,EAAAA,QAAQ,EAAEjB,aALQ;AAMlBkB,EAAAA,QAAQ,EAAEjB,aANQ;AAOlBkB,EAAAA,IAAI,EAAEjB;AAPY,CAApB;AAYA,MAAMkB,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,cADa;AAEpBC,EAAAA,SAAS,EAAE,SAFS;AAGpBC,EAAAA,KAAK,EAAE,YAHa;AAIpBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,0BADF;AAETC,IAAAA,MAAM,EAAE,eAFC;AAGTL,IAAAA,KAAK,EAAE,cAHE;AAITM,IAAAA,IAAI,EAAE;AAJG,GAJS;AAUpBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,MAAM,EAAE,QAFC;AAGTC,IAAAA,OAAO,EAAE,SAHA;AAITC,IAAAA,WAAW,EAAE,cAJJ;AAKTC,IAAAA,OAAO,EAAE,SALA;AAMTC,IAAAA,SAAS,EAAE,cANF;AAOTC,IAAAA,MAAM,EAAE,gBAPC;AAQTC,IAAAA,SAAS,EAAE;AARF;AAVS,CAAtB;AAsBA,MAAMC,gBAAgB,GAAG,GAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE,CADG;AAEnBC,EAAAA,cAAc,EAAE,QAFG;AAGnBC,EAAAA,gBAAgB,EAAEJ,gBAHC;AAInBK,EAAAA,gBAAgB,EAAE,QAJC;AAKnBC,EAAAA,OAAO,EAAE,IALU;AAMnBC,EAAAA,aAAa,EAAE;AANI,CAArB;;AASA,SAASC,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,SAAO,EAAC,GAAGD,CAAJ;AAAO,OAAGC,CAAV;AAAanB,IAAAA,SAAS,EAAE,EAAC,GAAGkB,CAAC,CAAClB,SAAN;AAAiB,SAAGmB,CAAC,CAACnB;AAAtB;AAAxB,GAAP;AACD;;AAED,OAAO,SAASoB,QAAT,CACLC,IADK,EAELC,MAFK,EAGLC,OAHK,EAI0C;AAAA;;AAC/C,MAAIF,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,SAA/B,EAA0C;AACxC,WAAOG,YAAY,CAACD,OAAD,CAAnB;AACD;;AAED,QAAME,SAAS,sBAAGH,MAAM,CAACI,OAAV,oDAAG,gBAAgBC,MAAlC;AACA,QAAMC,KAAK,GAAG;AACZxC,IAAAA,KAAK,EAAE;AACLyC,MAAAA,KAAK,EAAEjD,YADF;AAELkD,MAAAA,OAAO,EAAEb,aAAa,CAACzB,aAAD,EAAgB;AACpCQ,QAAAA,SAAS,EAAE;AAAC+B,UAAAA,OAAO,EAAE;AAAV;AADyB,OAAhB,CAFjB;AAKLrB,MAAAA;AALK,KADK;AAQZsB,IAAAA,OAAO,EAAE;AACPH,MAAAA,KAAK,EAAEjD,YADA;AAEPkD,MAAAA,OAAO,EAAEtC,aAFF;AAGPkB,MAAAA,YAAY,EAAE,EAAC,GAAGA,YAAJ;AAAkBuB,QAAAA,cAAc,EAAE;AAAlC;AAHP,KARG;AAaZR,IAAAA,SAAS,EAAE;AACTI,MAAAA,KAAK,EAAEnD,cADE;AAEToD,MAAAA,OAAO,EAAEb,aAAa,CAACzB,aAAD,EAAgB;AACpCQ,QAAAA,SAAS,EAAE;AAACkC,UAAAA,QAAQ,EAAE,UAAX;AAAuBC,UAAAA,cAAc,EAAE;AAAvC;AADyB,OAAhB,CAFb;AAKTzB,MAAAA,YAAY,EAAE,EAAC,GAAGA,YAAJ;AAAkB0B,QAAAA,UAAU,EAAEC,CAAC,IAAIA,CAAC,CAACZ,SAAD;AAApC;AALL;AAbC,IAoBZJ,IApBY,CAAd;AAsBAtC,EAAAA,MAAM,CAAC6C,KAAD,oCAAmCP,IAAnC,EAAN;AACA,SAAOO,KAAP;AACD;;AAED,SAASJ,YAAT,CAAsBD,OAAtB,EAA+B;AAC7B,QAAM;AACJe,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,CAACC,OAAD;AADH;AADF,MAIFjB,OAJJ;AAMA,QAAMkB,WAAW,GAAG,IAAIC,GAAJ,CAAQF,OAAR,EAAiBG,YAAjB,CAA8BC,GAA9B,CAAkC,aAAlC,KAAoD9D,YAAY,CAAC+D,GAArF;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAEY,WAAW,KAAK3D,YAAY,CAAC+D,GAA7B,GAAmClE,QAAnC,GAA8CE,cADhD;AAELiD,IAAAA,OAAO,EAAEtC,aAFJ;AAGLkB,IAAAA,YAAY,EAAE,EACZ,GAAGA,YADS;AAEZG,MAAAA,gBAAgB,EAAE,GAFN;AAGZoB,MAAAA,cAAc,EAAE,CAHJ;AAIZa,MAAAA,gBAAgB,EAAE,OAJN;AAKZL,MAAAA;AALY;AAHT,GAAP;AAWD;;AAED,SAASM,mBAAT,CAA6BC,SAA7B,EAAwCC,SAAxC,EAA+D;AAC7D,MAAIA,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,OAA7C,EAAsD;AACpD,WAAOD,SAAS,CAACE,UAAV,CAAqBC,GAArB,CAAyBC,CAAC,IAAIA,CAAC,CAACC,QAAhC,EAA0CC,MAA1C,CAAiDF,CAAC,IAAIA,CAAC,KAAKG,SAAN,IAAmBH,CAAC,KAAK,IAA/E,CAAP;AACD;;AAED,MAAI;AAACI,IAAAA;AAAD,MAAQR,SAAZ;;AACA,MAAIC,SAAS,KAAK,KAAd,IAAuBO,GAAG,KAAK,CAAnC,EAAsC;AACpCA,IAAAA,GAAG,GAAG,IAAN;AACD;;AACD,SAAO,CAACA,GAAD,EAAMR,SAAS,CAACS,GAAhB,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCV,SAAlC,EAAyD;AACvD,MAAIA,SAAS,KAAK,SAAlB,EAA6B;AAC3B,WAAO,CAAC,GAAG,IAAIW,GAAJ,CAAQD,MAAR,CAAJ,EAAqBE,IAArB,EAAP;AACD,GAFD,MAEO,IAAIZ,SAAS,KAAK,UAAlB,EAA8B;AACnC,WAAOU,MAAM,CAACE,IAAP,CAAY,CAAC3C,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA1B,CAAP;AACD,GAFM,MAEA,IAAI8B,SAAS,KAAK,KAAlB,EAAyB;AAC9B,UAAM,CAACa,EAAD,EAAKC,EAAL,IAAWjG,MAAM,CAAC6F,MAAD,CAAvB;AACA,WAAO,CAACG,EAAE,KAAK,CAAP,GAAW,IAAX,GAAkBA,EAAnB,EAAuBC,EAAvB,CAAP;AACD;;AACD,SAAOjG,MAAM,CAAC6F,MAAD,CAAb;AACD;;AAED,SAASK,eAAT,CAAyB1B,IAAzB,EAA+B2B,IAA/B,EAAqChB,SAArC,EAAgD;AAC9C,MAAIX,IAAI,CAAC4B,SAAT,EAAoB;AAElB,UAAM;AAACC,MAAAA;AAAD,QAAe7B,IAAI,CAAC4B,SAAL,CAAeE,MAAf,CAAsB,CAAtB,CAArB;AACA,UAAMpB,SAAS,GAAGmB,UAAU,CAACE,IAAX,CAAgBnD,CAAC,IAAIA,CAAC,CAAC8B,SAAF,KAAgBiB,IAArC,CAAlB;AACA,WAAOlB,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,CAA1B;AACD,GALD,MAKO,IAAIX,IAAI,CAACgC,QAAT,EAAmB;AAExB,UAAMX,MAAM,GAAGrB,IAAI,CAACgC,QAAL,CAAcnB,GAAd,CAAkB,CAAC;AAACoB,MAAAA;AAAD,KAAD,KAAkBA,UAAU,CAACN,IAAD,CAA9C,CAAf;AACA,WAAOP,gBAAgB,CAACC,MAAD,EAASV,SAAT,CAAvB;AACD,GAJM,MAIA,IAAIuB,KAAK,CAACC,OAAN,CAAcnC,IAAd,KAAuBA,IAAI,CAAC,CAAD,CAAJ,CAAQ2B,IAAR,MAAkBV,SAA7C,EAAwD;AAE7D,UAAMI,MAAM,GAAGrB,IAAI,CAACa,GAAL,CAASoB,UAAU,IAAIA,UAAU,CAACN,IAAD,CAAjC,CAAf;AACA,WAAOP,gBAAgB,CAACC,MAAD,EAASV,SAAT,CAAvB;AACD;;AAED,SAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;;AAED,SAASyB,iBAAT,CAA2BC,QAA3B,EAAqCrC,IAArC,EAA2C;AACzC,MAAIA,IAAI,CAACgC,QAAL,IAAiBhC,IAAI,CAAC4B,SAA1B,EAAqC;AACnC,WAAO,CAAC;AAACK,MAAAA;AAAD,KAAD,KAAkB;AACvB,aAAOI,QAAQ,CAACJ,UAAD,CAAf;AACD,KAFD;AAGD;;AACD,SAAOI,QAAP;AACD;;AAED,OAAO,SAASC,gBAAT,CACL;AAACX,EAAAA;AAAD,CADK,EAELhB,SAFK,EAGL;AAAC4B,EAAAA;AAAD,CAHK,EAIL1E,OAJK,EAKLmC,IALK,EAML;AACA,QAAMwC,KAAK,GAAG9F,WAAW,CAACiE,SAAD,CAAX,EAAd;AACA6B,EAAAA,KAAK,CAACC,MAAN,CAAaf,eAAe,CAAC1B,IAAD,EAAO2B,IAAP,EAAahB,SAAb,CAA5B;AACA6B,EAAAA,KAAK,CAACE,KAAN,CAAYH,MAAZ;AACA,QAAMI,KAAK,GAAG9E,OAAO,KAAKoD,SAAZ,GAAwB2B,IAAI,CAACC,KAAL,CAAW,MAAMD,IAAI,CAACE,GAAL,CAASjF,OAAT,EAAkB,IAAI,GAAtB,CAAjB,CAAxB,GAAuE,GAArF;;AAEA,QAAMwE,QAAQ,GAAGJ,UAAU,IAAI;AAC7B,UAAMc,IAAI,GAAGtH,GAAG,CAAC+G,KAAK,CAACP,UAAU,CAACN,IAAD,CAAX,CAAN,CAAhB;AACA,WAAO,CAACoB,IAAI,CAACC,CAAN,EAASD,IAAI,CAACE,CAAd,EAAiBF,IAAI,CAAClE,CAAtB,EAAyB8D,KAAzB,CAAP;AACD,GAHD;;AAIA,SAAOP,iBAAiB,CAACC,QAAD,EAAWrC,IAAX,CAAxB;AACD;AAED,OAAO,SAASkD,eAAT,CAAyB;AAACvB,EAAAA;AAAD,CAAzB,EAAiChB,SAAjC,EAAwD+B,KAAxD,EAAgF1C,IAAhF,EAA2F;AAChG,QAAMwC,KAAK,GAAG9F,WAAW,CAACiE,SAAD,CAAX,EAAd;AACA6B,EAAAA,KAAK,CAACC,MAAN,CAAaf,eAAe,CAAC1B,IAAD,EAAO2B,IAAP,EAAahB,SAAb,CAA5B;AACA6B,EAAAA,KAAK,CAACE,KAAN,CAAYA,KAAZ;;AAEA,QAAML,QAAQ,GAAGJ,UAAU,IAAI;AAC7B,WAAOO,KAAK,CAACP,UAAU,CAACN,IAAD,CAAX,CAAZ;AACD,GAFD;;AAGA,SAAOS,iBAAiB,CAACC,QAAD,EAAWrC,IAAX,CAAxB;AACD;AAED,MAAMmD,OAA+C,GAAG;AACtDC,EAAAA,IAAI,EAAEC,CAAC,IAAIlH,MAAM,CAACmH,GAAP,CAAWD,CAAX,EAAcpH,MAAd,CAAqB,oBAArB,CAD2C;AAEtDsH,EAAAA,OAAO,EAAErH,QAAQ,CAAC,GAAD,CAFqC;AAGtDsH,EAAAA,KAAK,EAAEtH,QAAQ,CAAC,KAAD,CAHuC;AAItDuH,EAAAA,SAAS,EAAEJ,CAAC,IAAIlH,MAAM,CAACmH,GAAP,CAAWD,CAAX,EAAcpH,MAAd,CAAqB,GAArB,CAJsC;AAKtDyH,EAAAA,OAAO,EAAEC;AAL6C,CAAxD;AAQA,OAAO,SAASC,eAAT,CAAyB;AAACjC,EAAAA,IAAD;AAAO5C,EAAAA;AAAP,CAAzB,EAAuCiB,IAAvC,EAA6C;AAClD,QAAM/D,MAAM,GAAGkH,OAAO,CAACpE,IAAD,CAAP,IAAiBoE,OAAO,CAACO,OAAxC;;AACA,QAAMrB,QAAQ,GAAGJ,UAAU,IAAI;AAC7B,WAAOhG,MAAM,CAACgG,UAAU,CAACN,IAAD,CAAX,CAAb;AACD,GAFD;;AAGA,SAAOS,iBAAiB,CAACC,QAAD,EAAWrC,IAAX,CAAxB;AACD;AAED,OAAO,SAAS6D,0BAAT,CAAoC;AAACtG,EAAAA,SAAD;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAApC,EAA+DQ,MAA/D,EAAuE;AAC5E,QAAM6F,OAAO,GAAG,EAAhB;AACA,QAAMC,KAAK,GAAGvG,MAAM,KAAK,QAAX,GAAsB,CAAtB,GAA0BA,MAAM,KAAK,OAAX,GAAqB,CAArB,GAAyB,CAAC,CAAlE;AACA,QAAMwG,KAAK,GAAGzG,SAAS,KAAK,QAAd,GAAyB,CAAzB,GAA6BA,SAAS,KAAK,QAAd,GAAyB,CAAzB,GAA6B,CAAC,CAAzE;AACA,QAAM0G,UAAU,GAAG1G,SAAS,KAAK,QAAd,GAAyB,CAAzB,GAA6BE,IAAhD;;AAEA,QAAMyG,eAAe,GAAGlB,CAAC,IAAI;AAC3BA,IAAAA,CAAC,GAAG7E,gBAAgB,GAAG6E,CAAvB;AACA,WAAO,CAACe,KAAK,IAAIf,CAAC,GAAGc,OAAR,CAAN,EAAwBE,KAAK,IAAIhB,CAAC,GAAGc,OAAJ,GAAcG,UAAlB,CAA7B,CAAP;AACD,GAHD;;AAKA,SAAO,OAAOhG,MAAP,KAAkB,UAAlB,GACH8B,CAAC,IAAI;AACH,WAAOmE,eAAe,CAACjG,MAAM,CAAC8B,CAAD,CAAP,CAAtB;AACD,GAHE,GAIHmE,eAAe,CAACjG,MAAD,CAJnB;AAKD;AAED,SAAQmD,gBAAgB,IAAI+C,iBAA5B","sourcesContent":["import {extent} from 'd3-array';\nimport {rgb} from 'd3-color';\nimport {\n  scaleLinear,\n  scaleOrdinal,\n  scaleLog,\n  scalePoint,\n  scaleQuantile,\n  scaleQuantize,\n  scaleSqrt\n} from 'd3-scale';\nimport {format as d3Format} from 'd3-format';\nimport moment from 'moment-timezone';\nimport {H3HexagonLayer, MVTLayer} from '@deck.gl/geo-layers';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport CartoTileLayer from '../layers/carto-tile-layer';\nimport {TILE_FORMATS} from './maps-api-common';\nimport {assert} from '../utils';\n\nconst SCALE_FUNCS = {\n  linear: scaleLinear,\n  ordinal: scaleOrdinal,\n  log: scaleLog,\n  point: scalePoint,\n  quantile: scaleQuantile,\n  quantize: scaleQuantize,\n  sqrt: scaleSqrt\n};\nexport type SCALE_TYPE = keyof typeof SCALE_FUNCS;\n\n// Kepler -> Deck.gl\nconst sharedPropMap = {\n  color: 'getFillColor',\n  isVisible: 'visible',\n  label: 'cartoLabel',\n  textLabel: {\n    alignment: 'getTextAlignmentBaseline',\n    anchor: 'getTextAnchor',\n    color: 'getTextColor',\n    size: 'getTextSize'\n  },\n  visConfig: {\n    enable3d: 'extruded',\n    filled: 'filled',\n    opacity: 'opacity',\n    strokeColor: 'getLineColor',\n    stroked: 'stroked',\n    thickness: 'getLineWidth',\n    radius: 'getPointRadius',\n    wireframe: 'wireframe'\n  }\n};\n\nconst RADIUS_DOWNSCALE = 0.2;\n\nconst defaultProps = {\n  lineMiterLimit: 2,\n  lineWidthUnits: 'pixels',\n  pointRadiusScale: RADIUS_DOWNSCALE,\n  pointRadiusUnits: 'pixels',\n  rounded: true,\n  wrapLongitude: false\n};\n\nfunction mergePropMaps(a, b) {\n  return {...a, ...b, visConfig: {...a.visConfig, ...b.visConfig}};\n}\n\nexport function getLayer(\n  type: string,\n  config,\n  dataset\n): {Layer: any; propMap: any; defaultProps: any} {\n  if (type === 'mvt' || type === 'tileset') {\n    return getTileLayer(dataset);\n  }\n\n  const hexagonId = config.columns?.hex_id;\n  const layer = {\n    point: {\n      Layer: GeoJsonLayer,\n      propMap: mergePropMaps(sharedPropMap, {\n        visConfig: {outline: 'stroked'}\n      }),\n      defaultProps\n    },\n    geojson: {\n      Layer: GeoJsonLayer,\n      propMap: sharedPropMap,\n      defaultProps: {...defaultProps, lineWidthScale: 2}\n    },\n    hexagonId: {\n      Layer: H3HexagonLayer,\n      propMap: mergePropMaps(sharedPropMap, {\n        visConfig: {coverage: 'coverage', elevationScale: 'elevationScale'}\n      }),\n      defaultProps: {...defaultProps, getHexagon: d => d[hexagonId]}\n    }\n  }[type];\n\n  assert(layer, `Unsupported layer type: ${type}`);\n  return layer;\n}\n\nfunction getTileLayer(dataset) {\n  const {\n    data: {\n      tiles: [tileUrl]\n    }\n  } = dataset;\n  /* global URL */\n  const formatTiles = new URL(tileUrl).searchParams.get('formatTiles') || TILE_FORMATS.MVT;\n\n  return {\n    Layer: formatTiles === TILE_FORMATS.MVT ? MVTLayer : CartoTileLayer,\n    propMap: sharedPropMap,\n    defaultProps: {\n      ...defaultProps,\n      pointRadiusScale: 0.3,\n      lineWidthScale: 2,\n      uniqueIdProperty: 'geoid',\n      formatTiles\n    }\n  };\n}\n\nfunction domainFromAttribute(attribute, scaleType: SCALE_TYPE) {\n  if (scaleType === 'ordinal' || scaleType === 'point') {\n    return attribute.categories.map(c => c.category).filter(c => c !== undefined && c !== null);\n  }\n\n  let {min} = attribute;\n  if (scaleType === 'log' && min === 0) {\n    min = 1e-5;\n  }\n  return [min, attribute.max];\n}\n\nfunction domainFromValues(values, scaleType: SCALE_TYPE) {\n  if (scaleType === 'ordinal') {\n    return [...new Set(values)].sort();\n  } else if (scaleType === 'quantile') {\n    return values.sort((a, b) => a - b);\n  } else if (scaleType === 'log') {\n    const [d0, d1] = extent(values as number[]);\n    return [d0 === 0 ? 1e-5 : d0, d1];\n  }\n  return extent(values);\n}\n\nfunction calculateDomain(data, name, scaleType) {\n  if (data.tilestats) {\n    // Tileset data type\n    const {attributes} = data.tilestats.layers[0];\n    const attribute = attributes.find(a => a.attribute === name);\n    return domainFromAttribute(attribute, scaleType);\n  } else if (data.features) {\n    // GeoJSON data type\n    const values = data.features.map(({properties}) => properties[name]);\n    return domainFromValues(values, scaleType);\n  } else if (Array.isArray(data) && data[0][name] !== undefined) {\n    // JSON data type\n    const values = data.map(properties => properties[name]);\n    return domainFromValues(values, scaleType);\n  }\n\n  return [0, 1];\n}\n\nfunction normalizeAccessor(accessor, data) {\n  if (data.features || data.tilestats) {\n    return ({properties}) => {\n      return accessor(properties);\n    };\n  }\n  return accessor;\n}\n\nexport function getColorAccessor(\n  {name},\n  scaleType: SCALE_TYPE,\n  {colors},\n  opacity: number | undefined,\n  data: any\n) {\n  const scale = SCALE_FUNCS[scaleType as any]();\n  scale.domain(calculateDomain(data, name, scaleType));\n  scale.range(colors);\n  const alpha = opacity !== undefined ? Math.round(255 * Math.pow(opacity, 1 / 2.2)) : 255;\n\n  const accessor = properties => {\n    const rgba = rgb(scale(properties[name]));\n    return [rgba.r, rgba.g, rgba.b, alpha];\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nexport function getSizeAccessor({name}, scaleType: SCALE_TYPE, range: Iterable<Range>, data: any) {\n  const scale = SCALE_FUNCS[scaleType as any]();\n  scale.domain(calculateDomain(data, name, scaleType));\n  scale.range(range);\n\n  const accessor = properties => {\n    return scale(properties[name]);\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nconst FORMATS: Record<string, (value: any) => string> = {\n  date: s => moment.utc(s).format('MM/DD/YY HH:mm:ssa'),\n  integer: d3Format('i'),\n  float: d3Format('.5f'),\n  timestamp: s => moment.utc(s).format('X'),\n  default: String\n};\n\nexport function getTextAccessor({name, type}, data) {\n  const format = FORMATS[type] || FORMATS.default;\n  const accessor = properties => {\n    return format(properties[name]);\n  };\n  return normalizeAccessor(accessor, data);\n}\n\nexport function getTextPixelOffsetAccessor({alignment, anchor, size}, radius) {\n  const padding = 20;\n  const signX = anchor === 'middle' ? 0 : anchor === 'start' ? 1 : -1;\n  const signY = alignment === 'center' ? 0 : alignment === 'bottom' ? 1 : -1;\n  const sizeOffset = alignment === 'center' ? 0 : size;\n\n  const calculateOffset = r => {\n    r = RADIUS_DOWNSCALE * r;\n    return [signX * (r + padding), signY * (r + padding + sizeOffset)];\n  };\n\n  return typeof radius === 'function'\n    ? d => {\n        return calculateOffset(radius(d));\n      }\n    : calculateOffset(radius);\n}\n\nexport {domainFromValues as _domainFromValues};\n"],"file":"layer-map.js"}