{"version":3,"sources":["../../../src/style/color-bins-style.ts"],"names":["scaleThreshold","getPalette","DEFAULT_PALETTE","NULL_COLOR","assert","getAttrValue","colorBins","attr","domain","colors","nullColor","Array","isArray","palette","length","color","range","d","value","Number","isFinite"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,OAAOC,UAAP,IAA2BC,eAA3B,EAA4CC,UAA5C,QAA6D,WAA7D;AACA,SAAQC,MAAR,EAAmCC,YAAnC,QAAsD,SAAtD;AAEA,eAAe,SAASC,SAAT,CAAmB;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,MAFgC;AAGhCC,EAAAA,MAAM,GAAGP,eAHuB;AAIhCQ,EAAAA,SAAS,GAAGP;AAJoB,CAAnB,EAUO;AACpBC,EAAAA,MAAM,CAACO,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAD,EAAwB,6CAAxB,CAAN;AAEA,QAAMK,OAAO,GAAG,OAAOJ,MAAP,KAAkB,QAAlB,GAA6BR,UAAU,CAACQ,MAAD,EAASD,MAAM,CAACM,MAAP,GAAgB,CAAzB,CAAvC,GAAqEL,MAArF;AAEA,QAAMM,KAAK,GAAGf,cAAc,GAAkBQ,MAAhC,CAAuCA,MAAvC,EAA+CQ,KAA/C,CAAqDH,OAArD,CAAd;AAEA,SAAOI,CAAC,IAAI;AACV,UAAMC,KAAK,GAAGb,YAAY,CAACE,IAAD,EAAOU,CAAP,CAA1B;AACA,WAAO,OAAOC,KAAP,KAAiB,QAAjB,IAA6BC,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAA7B,GAAsDH,KAAK,CAACG,KAAD,CAA3D,GAAqER,SAA5E;AACD,GAHD;AAID","sourcesContent":["import {scaleThreshold} from 'd3-scale';\nimport getPalette, {Color, DEFAULT_PALETTE, NULL_COLOR} from './palette';\nimport {assert, AttributeSelector, getAttrValue} from './utils';\n\nexport default function colorBins({\n  attr,\n  domain,\n  colors = DEFAULT_PALETTE,\n  nullColor = NULL_COLOR\n}: {\n  attr: AttributeSelector;\n  domain: number[];\n  colors?: string | Color[];\n  nullColor?: Color;\n}): AttributeSelector {\n  assert(Array.isArray(domain), 'Expected \"domain\" to be an array of numbers');\n\n  const palette = typeof colors === 'string' ? getPalette(colors, domain.length + 1) : colors;\n\n  const color = scaleThreshold<number, Color>().domain(domain).range(palette);\n\n  return d => {\n    const value = getAttrValue(attr, d);\n    return typeof value === 'number' && Number.isFinite(value) ? color(value) : nullColor;\n  };\n}\n"],"file":"color-bins-style.js"}