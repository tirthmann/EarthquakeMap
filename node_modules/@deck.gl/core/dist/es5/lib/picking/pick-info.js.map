{"version":3,"sources":["../../../../src/lib/picking/pick-info.js"],"names":["getEmptyPickingInfo","pickInfo","viewports","pixelRatio","x","y","z","pickedViewport","length","getViewportFromCoordinates","pickedViewports","coordinate","unproject","color","layer","viewport","index","picked","pixel","devicePixel","pickedX","pickedY","processPickInfo","opts","lastPickedInfo","mode","layers","pickedColor","pickedLayer","pickedObjectIndex","affectedLayers","lastPickedObjectIndex","lastPickedLayerId","layerId","pickedLayerId","props","id","lastPickedLayer","find","unshift","info","baseInfo","infos","Map","set","forEach","getLayerPickingInfo","updateAutoHighlight","sourceLayer","getPickingInfo","parent","i","containsPixel"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Even if nothing gets picked, we need to expose some information of the picking action:\n// x, y, coordinates etc.\nexport function getEmptyPickingInfo({pickInfo, viewports, pixelRatio, x, y, z}) {\n  // If more than one viewports are used in the picking pass, locate the viewport that\n  // drew the picked pixel\n  let pickedViewport = viewports[0];\n  if (viewports.length > 1) {\n    // Find the viewport that contain the picked pixel\n    pickedViewport = getViewportFromCoordinates(pickInfo?.pickedViewports || viewports, {x, y});\n  }\n  const coordinate =\n    pickedViewport && pickedViewport.unproject([x - pickedViewport.x, y - pickedViewport.y, z]);\n\n  return {\n    color: null,\n    layer: null,\n    viewport: pickedViewport,\n    index: -1,\n    picked: false,\n    x,\n    y,\n    pixel: [x, y],\n    coordinate,\n    devicePixel: pickInfo && 'pickedX' in pickInfo ? [pickInfo.pickedX, pickInfo.pickedY] : null,\n    pixelRatio\n  };\n}\n\n/* eslint-disable max-depth */\nexport function processPickInfo(opts) {\n  const {pickInfo, lastPickedInfo, mode, layers} = opts;\n  const {pickedColor, pickedLayer, pickedObjectIndex} = pickInfo;\n\n  const affectedLayers = pickedLayer ? [pickedLayer] : [];\n\n  if (mode === 'hover') {\n    // only invoke onHover events if picked object has changed\n    const lastPickedObjectIndex = lastPickedInfo.index;\n    const lastPickedLayerId = lastPickedInfo.layerId;\n    const pickedLayerId = pickedLayer && pickedLayer.props.id;\n\n    // proceed only if picked object changed\n    if (pickedLayerId !== lastPickedLayerId || pickedObjectIndex !== lastPickedObjectIndex) {\n      if (pickedLayerId !== lastPickedLayerId) {\n        // We cannot store a ref to lastPickedLayer in the context because\n        // the state of an outdated layer is no longer valid\n        // and the props may have changed\n        const lastPickedLayer = layers.find(layer => layer.props.id === lastPickedLayerId);\n        if (lastPickedLayer) {\n          // Let leave event fire before enter event\n          affectedLayers.unshift(lastPickedLayer);\n        }\n      }\n\n      // Update layer manager context\n      lastPickedInfo.layerId = pickedLayerId;\n      lastPickedInfo.index = pickedObjectIndex;\n      lastPickedInfo.info = null;\n    }\n  }\n\n  const baseInfo = getEmptyPickingInfo(opts);\n\n  // Use a Map to store all picking infos.\n  // The following two forEach loops are the result of\n  // https://github.com/visgl/deck.gl/issues/443\n  // Please be very careful when changing this pattern\n  const infos = new Map();\n\n  // Make sure infos always contain something even if no layer is affected\n  infos.set(null, baseInfo);\n\n  affectedLayers.forEach(layer => {\n    let info = {...baseInfo};\n\n    if (layer === pickedLayer) {\n      info.color = pickedColor;\n      info.index = pickedObjectIndex;\n      info.picked = true;\n    }\n\n    info = getLayerPickingInfo({layer, info, mode});\n\n    if (layer === pickedLayer && mode === 'hover') {\n      lastPickedInfo.info = info;\n    }\n\n    // This guarantees that there will be only one copy of info for\n    // one composite layer\n    infos.set(info.layer.id, info);\n\n    if (mode === 'hover') {\n      info.layer.updateAutoHighlight(info);\n    }\n  });\n\n  return infos;\n}\n\n// Walk up the layer composite chain to populate the info object\nexport function getLayerPickingInfo({layer, info, mode}) {\n  while (layer && info) {\n    // For a composite layer, sourceLayer will point to the sublayer\n    // where the event originates from.\n    // It provides additional context for the composite layer's\n    // getPickingInfo() method to populate the info object\n    const sourceLayer = info.layer || null;\n    info.sourceLayer = sourceLayer;\n    info.layer = layer;\n    // layer.pickLayer() function requires a non-null ```layer.state```\n    // object to function properly. So the layer referenced here\n    // must be the \"current\" layer, not an \"out-dated\" / \"invalidated\" layer\n    info = layer.getPickingInfo({info, mode, sourceLayer});\n    layer = layer.parent;\n  }\n  return info;\n}\n\n// Indentifies which viewport, if any corresponds to x and y\n// If multiple viewports contain the target pixel, last viewport drawn is returend\n// Returns first viewport if no match\nfunction getViewportFromCoordinates(viewports, pixel) {\n  // find the last viewport that contains the pixel\n  for (let i = viewports.length - 1; i >= 0; i--) {\n    const viewport = viewports[i];\n    if (viewport.containsPixel(pixel)) {\n      return viewport;\n    }\n  }\n  return viewports[0];\n}\n"],"file":"pick-info.js"}