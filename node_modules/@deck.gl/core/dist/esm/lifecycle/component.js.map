{"version":3,"sources":["../../../src/lifecycle/component.ts"],"names":["LIFECYCLE","COMPONENT_SYMBOL","ASYNC_ORIGINAL_SYMBOL","ASYNC_RESOLVED_SYMBOL","ASYNC_DEFAULTS_SYMBOL","createProps","ComponentState","counter","Component","constructor","propObjects","props","id","count","lifecycle","NO_STATE","parent","context","state","internalState","Object","seal","root","component","clone","newProps","asyncProps","key","_initState"],"mappings":";AAAA,SACEA,SADF,EAGEC,gBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,QAOO,aAPP;AAQA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,IAAIC,OAAO,GAAG,CAAd;AAaA,eAAe,MAAMC,SAAN,CAA+C;AAa5DC,EAAAA,WAAW,CAAC,GAAGC,WAAJ,EAAoC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAG7C,SAAKC,KAAL,GAAaN,WAAW,CAAS,IAAT,EAAeK,WAAf,CAAxB;AAIA,SAAKE,EAAL,GAAU,KAAKD,KAAL,CAAWC,EAArB;AACA,SAAKC,KAAL,GAAaN,OAAO,EAApB;AACA,SAAKO,SAAL,GAAiBd,SAAS,CAACe,QAA3B;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,aAAL,GAAqB,IAArB;AAGAC,IAAAA,MAAM,CAACC,IAAP,CAAY,IAAZ;AACD;;AAEO,MAAJC,IAAI,GAAG;AAET,QAAIC,SAAyB,GAAG,IAAhC;;AACA,WAAOA,SAAS,CAACP,MAAjB,EAAyB;AACvBO,MAAAA,SAAS,GAAGA,SAAS,CAACP,MAAtB;AACD;;AACD,WAAOO,SAAP;AACD;;AAGDC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACd,UAAM;AAACd,MAAAA;AAAD,QAAU,IAAhB;AAGA,UAAMe,UAA2B,GAAG,EAApC;;AAGA,SAAK,MAAMC,GAAX,IAAkBhB,KAAK,CAACP,qBAAD,CAAvB,EAAgD;AAC9C,UAAIuB,GAAG,IAAIhB,KAAK,CAACR,qBAAD,CAAhB,EAAyC;AACvCuB,QAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBhB,KAAK,CAACR,qBAAD,CAAL,CAA6BwB,GAA7B,CAAlB;AACD,OAFD,MAEO,IAAIA,GAAG,IAAIhB,KAAK,CAACT,qBAAD,CAAhB,EAAyC;AAC9CwB,QAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBhB,KAAK,CAACT,qBAAD,CAAL,CAA6ByB,GAA7B,CAAlB;AACD;AACF;;AAID,WAAO,IAAI,KAAKlB,WAAT,CAAqB,EAAC,GAAGE,KAAJ;AAAW,SAAGe,UAAd;AAA0B,SAAGD;AAA7B,KAArB,CAAP;AACD;;AAIDG,EAAAA,UAAU,GAAG;AACX,SAAKT,aAAL,GAAqB,IAAIb,cAAJ,CAAmB,IAAnB,CAArB;AACD;;AAlE2D;;gBAAzCE,S,mBACY,W;;gBADZA,S,kBAEiB,E","sourcesContent":["import {\n  LIFECYCLE,\n  Lifecycle,\n  COMPONENT_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {createProps} from './create-props';\nimport ComponentState from './component-state';\n\nlet counter = 0;\n\nexport type ComponentProps = {\n  id: string;\n};\n\nexport type StatefulComponentProps<PropsT extends ComponentProps> = PropsT & {\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT extends ComponentProps> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n  lifecycle: Lifecycle;\n  parent: Component<any> | null;\n  context: Record<string, any> | null;\n  state: Record<string, any> | null;\n  internalState: ComponentState<PropsT> | null;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    // Define all members before layer is sealed\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n    this.lifecycle = LIFECYCLE.NO_STATE; // Helps track and debug the life cycle of the layers\n    this.parent = null; // reference to the composite layer parent that rendered this layer\n    this.context = null; // Will reference layer manager's context, contains state shared by layers\n    this.state = null; // Will be set to the shared layer state object during layer matching\n    this.internalState = null;\n\n    // Seal the layer\n    Object.seal(this);\n  }\n\n  get root() {\n    // eslint-disable-next-line\n    let component: Component<any> = this;\n    while (component.parent) {\n      component = component.parent;\n    }\n    return component;\n  }\n\n  // clone this layer with modified props\n  clone(newProps) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n\n  // PROTECTED METHODS, override in subclass\n\n  _initState() {\n    this.internalState = new ComponentState(this);\n  }\n}\n"],"file":"component.js"}