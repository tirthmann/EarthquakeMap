{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["WORLD_SIZE","defaultProps","GeoJsonLayer","uniqueIdProperty","type","value","highlightedFeatureId","loaders","MVTWorkerLoader","binary","MVTLayer","context","viewport","resolution","undefined","props","setState","data","tileJSON","state","tileset","oldProps","changeFlags","dataChanged","_updateTileData","_setWGS84PropertyForTiles","highlightColor","Array","isArray","onDataLoad","fetch","propName","layer","raiseError","tilejson","tiles","opts","Number","isFinite","minzoom","minZoom","maxzoom","maxZoom","tile","url","Promise","reject","loadOptions","getLoadOptions","signal","x","y","z","mimeType","mvt","coordinates","tileIndex","gis","format","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","Matrix4","scale","autoHighlight","coordinateOrigin","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","subLayers","log","warn","info","hoveredFeatureId","hoveredFeatureLayerName","hoveredFeature","object","newHoveredFeatureId","newHoveredFeatureLayerName","getFeatureUniqueId","getFeatureLayerName","params","isWGS84","index","sourceLayer","globalFeatureId","transformTileCoordsToWGS84","bbox","highlightedObjectIndex","getHighlightedObjectIndex","content","isHighlighted","isFeatureIdDefined","isFeatureIdPresent","featureIdToHighlight","findIndex","feature","isMatchingId","isMatchingLayer","maxObjects","deck","width","height","layerIds","id","pickObjects","maxFeatures","features","_pickObjects","featureCache","Set","renderedFeatures","f","featureId","push","has","add","selectedTiles","forEach","hasOwnProperty","Object","defineProperty","get","length","_contentWGS84","map","TileLayer","properties","layerName","geometry","wgs84Geom"],"mappings":"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","sourcesContent":["import {log} from '@deck.gl/core';\nimport {Matrix4} from '@math.gl/core';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport {transform} from './coordinate-transform';\nimport findIndexBinary from './find-index-binary';\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  ...GeoJsonLayer.defaultProps,\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: true\n};\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    // GlobeView doesn't work well with binary data\n    const binary = this.context.viewport.resolution !== undefined ? false : this.props.binary;\n    this.setState({\n      binary,\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData();\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n    const {highlightColor} = props;\n    if (highlightColor !== oldProps.highlightColor && Array.isArray(highlightColor)) {\n      this.setState({highlightColor});\n    }\n  }\n\n  /* eslint-disable complexity */\n  async _updateTileData() {\n    let {data} = this.props;\n    let tileJSON = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n    }\n\n    this.setState({data, tileJSON});\n  }\n\n  _getTilesetOptions(props) {\n    const opts = super._getTilesetOptions(props);\n    const {tileJSON} = this.state;\n\n    if (tileJSON) {\n      if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > props.minZoom) {\n        opts.minZoom = tileJSON.minzoom;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(props.maxZoom) || tileJSON.maxzoom < props.maxZoom)\n      ) {\n        opts.maxZoom = tileJSON.maxzoom;\n      }\n    }\n    return opts;\n  }\n\n  /* eslint-disable complexity */\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {binary} = this.state;\n    const {fetch} = this.props;\n    const {signal, x, y, z} = tile;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x, y, z}\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.state.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  _updateAutoHighlight(info) {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n    let newHoveredFeatureLayerName;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n    }\n    let {highlightColor} = this.props;\n    if (typeof highlightColor === 'function') {\n      highlightColor = highlightColor(info);\n    }\n\n    if (\n      hoveredFeatureId !== newHoveredFeatureId ||\n      hoveredFeatureLayerName !== newHoveredFeatureLayerName\n    ) {\n      this.setState({\n        highlightColor,\n        hoveredFeatureId: newHoveredFeatureId,\n        hoveredFeatureLayerName: newHoveredFeatureLayerName\n      });\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = this.context.viewport.resolution;\n\n    if (this.state.binary && info.index !== -1) {\n      const {data} = params.sourceLayer.props;\n      info.object = binaryToGeojson(data, {globalFeatureId: info.index});\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(info.object, info.tile.bbox, this.context.viewport);\n    }\n\n    return info;\n  }\n\n  getSubLayerPropsByTile(tile) {\n    return {\n      highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n      highlightColor: this.state.highlightColor\n    };\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId, hoveredFeatureLayerName, binary} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const data = tile.content;\n\n    const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isHighlighted ? highlightedFeatureId : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(feature => {\n        const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n        const isMatchingLayer =\n          isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n        return isMatchingId && isMatchingLayer;\n      });\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      return findIndexBinary(\n        data,\n        uniqueIdProperty,\n        featureIdToHighlight,\n        isHighlighted ? '' : hoveredFeatureLayerName\n      );\n    }\n\n    return -1;\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === undefined) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _setWGS84PropertyForTiles() {\n    const propName = 'dataInWGS84';\n    const {tileset} = this.state;\n\n    tileset.selectedTiles.forEach(tile => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.state.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            if (tile._contentWGS84 === undefined) {\n              // Create a cache to transform only once\n              const content = this.state.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, tile.bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return undefined;\n}\n\nfunction getFeatureLayerName(feature) {\n  return feature.properties?.layerName || null;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(object, bbox, viewport) {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature;\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}