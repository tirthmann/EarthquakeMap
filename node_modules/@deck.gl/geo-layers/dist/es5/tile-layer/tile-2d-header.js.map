{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["Tile2DHeader","x","y","z","isVisible","isSelected","parent","children","content","_loaderId","_isLoaded","_isCancelled","_needsReload","isLoading","_loader","then","data","Boolean","result","byteLength","Number","isFinite","log","error","getData","requestScheduler","onLoad","onError","bbox","loaderId","_abortController","AbortController","signal","scheduleRequest","tile","requestToken","done","tileData","undefined","opts","_loadData","abort","isLoaded"],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n\n    this._loaderId = 0;\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n  }\n\n  get data() {\n    return this.isLoading ? this._loader.then(() => this.data) : this.content;\n  }\n\n  get isLoaded() {\n    return this._isLoaded && !this._needsReload;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader) && !this._isCancelled;\n  }\n\n  get needsReload() {\n    return this._needsReload || this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData({getData, requestScheduler, onLoad, onError}) {\n    const {x, y, z, bbox} = this;\n    const loaderId = this._loaderId;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData = null;\n    let error;\n    try {\n      tileData = await getData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n    }\n\n    // If loadData has been called with a newer version, discard the result from this operation\n    if (loaderId !== this._loaderId) {\n      return;\n    }\n    // Clear the `isLoading` flag\n    this._loader = undefined;\n    // Rewrite tile content with the result of getTileData if successful, or `null` in case of\n    // error or cancellation\n    this.content = tileData;\n    // If cancelled, do not invoke the callbacks\n    // Consider it loaded if we tried to cancel but `getTileData` still returned data\n    if (this._isCancelled && !tileData) {\n      this._isLoaded = false;\n      return;\n    }\n    this._isLoaded = true;\n    this._isCancelled = false;\n\n    if (error) {\n      onError(error, this);\n    } else {\n      onLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(opts) {\n    this._isLoaded = false;\n    this._isCancelled = false;\n    this._needsReload = false;\n    this._loaderId++;\n    this._loader = this._loadData(opts);\n    return this._loader;\n  }\n\n  setNeedsReload() {\n    if (this.isLoading) {\n      this.abort();\n      this._loader = undefined;\n    }\n    this._needsReload = true;\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n"],"file":"tile-2d-header.js"}