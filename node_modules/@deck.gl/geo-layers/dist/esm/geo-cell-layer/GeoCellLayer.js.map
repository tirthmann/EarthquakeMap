{"version":3,"sources":["../../../src/geo-cell-layer/GeoCellLayer.js"],"names":["CompositeLayer","PolygonLayer","defaultProps","GeoCellLayer","indexToBounds","renderLayers","elevationScale","extruded","wireframe","filled","stroked","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","lineJointRounded","lineMiterLimit","lineDashJustified","getElevation","getFillColor","getLineColor","getLineWidth","props","updateTriggers","material","transitions","CellLayer","getSubLayerClass","getSubLayerProps","id","layerName"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,MAAMC,YAAY,GAAG,EACnB,GAAGD,YAAY,CAACC;AADG,CAArB;AAIA,eAAe,MAAMC,YAAN,SAA2BH,cAA3B,CAA0C;AAEvDI,EAAAA,aAAa,GAAG;AACd,WAAO,IAAP;AACD;;AAEDC,EAAAA,YAAY,GAAG;AAEb,UAAM;AACJC,MAAAA,cADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA,MAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,cANI;AAOJC,MAAAA,cAPI;AAQJC,MAAAA,kBARI;AASJC,MAAAA,kBATI;AAUJC,MAAAA,gBAVI;AAWJC,MAAAA,cAXI;AAYJC,MAAAA,iBAZI;AAaJC,MAAAA,YAbI;AAcJC,MAAAA,YAdI;AAeJC,MAAAA,YAfI;AAgBJC,MAAAA;AAhBI,QAiBF,KAAKC,KAjBT;AAoBA,UAAM;AAACC,MAAAA,cAAD;AAAiBC,MAAAA,QAAjB;AAA2BC,MAAAA;AAA3B,QAA0C,KAAKH,KAArD;AAGA,UAAMI,SAAS,GAAG,KAAKC,gBAAL,CAAsB,MAAtB,EAA8B1B,YAA9B,CAAlB;AACA,WAAO,IAAIyB,SAAJ,CACL;AACEjB,MAAAA,MADF;AAEED,MAAAA,SAFF;AAIED,MAAAA,QAJF;AAKED,MAAAA,cALF;AAOEI,MAAAA,OAPF;AAQEC,MAAAA,cARF;AASEC,MAAAA,cATF;AAUEC,MAAAA,kBAVF;AAWEC,MAAAA,kBAXF;AAYEC,MAAAA,gBAZF;AAaEC,MAAAA,cAbF;AAcEC,MAAAA,iBAdF;AAgBEO,MAAAA,QAhBF;AAiBEC,MAAAA,WAjBF;AAmBEP,MAAAA,YAnBF;AAoBEC,MAAAA,YApBF;AAqBEC,MAAAA,YArBF;AAsBEC,MAAAA;AAtBF,KADK,EAyBL,KAAKO,gBAAL,CAAsB;AACpBC,MAAAA,EAAE,EAAE,MADgB;AAEpBN,MAAAA,cAAc,EAAE;AACdL,QAAAA,YAAY,EAAEK,cAAc,CAACL,YADf;AAEdC,QAAAA,YAAY,EAAEI,cAAc,CAACJ,YAFf;AAGdC,QAAAA,YAAY,EAAEG,cAAc,CAACH,YAHf;AAIdC,QAAAA,YAAY,EAAEE,cAAc,CAACF;AAJf;AAFI,KAAtB,CAzBK,EAkCL,KAAKjB,aAAL,EAlCK,CAAP;AAoCD;;AApEsD;AAuEzDD,YAAY,CAAC2B,SAAb,GAAyB,cAAzB;AACA3B,YAAY,CAACD,YAAb,GAA4BA,YAA5B","sourcesContent":["import {CompositeLayer} from '@deck.gl/core';\nimport {PolygonLayer} from '@deck.gl/layers';\n\nconst defaultProps = {\n  ...PolygonLayer.defaultProps\n};\n\nexport default class GeoCellLayer extends CompositeLayer {\n  // Implement to generate props to create geometry\n  indexToBounds() {\n    return null;\n  }\n\n  renderLayers() {\n    // Rendering props underlying layer\n    const {\n      elevationScale,\n      extruded,\n      wireframe,\n      filled,\n      stroked,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      lineDashJustified,\n      getElevation,\n      getFillColor,\n      getLineColor,\n      getLineWidth\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {updateTriggers, material, transitions} = this.props;\n\n    // Filled Polygon Layer\n    const CellLayer = this.getSubLayerClass('cell', PolygonLayer);\n    return new CellLayer(\n      {\n        filled,\n        wireframe,\n\n        extruded,\n        elevationScale,\n\n        stroked,\n        lineWidthUnits,\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels,\n        lineJointRounded,\n        lineMiterLimit,\n        lineDashJustified,\n\n        material,\n        transitions,\n\n        getElevation,\n        getFillColor,\n        getLineColor,\n        getLineWidth\n      },\n      this.getSubLayerProps({\n        id: 'cell',\n        updateTriggers: {\n          getElevation: updateTriggers.getElevation,\n          getFillColor: updateTriggers.getFillColor,\n          getLineColor: updateTriggers.getLineColor,\n          getLineWidth: updateTriggers.getLineWidth\n        }\n      }),\n      this.indexToBounds()\n    );\n  }\n}\n\nGeoCellLayer.layerName = 'GeoCellLayer';\nGeoCellLayer.defaultProps = defaultProps;\n"],"file":"GeoCellLayer.js"}