{"version":3,"sources":["../../../src/h3-layers/h3-cluster-layer.js"],"names":["h3SetToMultiPolygon","createIterable","GeoCellLayer","defaultProps","getHexagons","type","value","d","hexagons","H3ClusterLayer","updateState","props","oldProps","changeFlags","dataChanged","updateTriggers","data","polygons","iterable","objectInfo","object","index","multiPolygon","polygon","push","getSubLayerRow","setState","indexToBounds","state","getPolygon","layerName"],"mappings":"AAAA,SAAQA,mBAAR,QAAkC,OAAlC;AAEA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAEC,CAAC,IAAIA,CAAC,CAACC;AAAjC;AADM,CAArB;AAIA,eAAe,MAAMC,cAAN,SAA6BP,YAA7B,CAA0C;AACvDQ,EAAAA,WAAW,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAD,EAAiC;AAC1C,QACEA,WAAW,CAACC,WAAZ,IACCD,WAAW,CAACE,cAAZ,IAA8BF,WAAW,CAACE,cAAZ,CAA2BX,WAF5D,EAGE;AACA,YAAM;AAACY,QAAAA,IAAD;AAAOZ,QAAAA;AAAP,UAAsBO,KAA5B;AACA,YAAMM,QAAQ,GAAG,EAAjB;AAEA,YAAM;AAACC,QAAAA,QAAD;AAAWC,QAAAA;AAAX,UAAyBlB,cAAc,CAACe,IAAD,CAA7C;;AACA,WAAK,MAAMI,MAAX,IAAqBF,QAArB,EAA+B;AAC7BC,QAAAA,UAAU,CAACE,KAAX;AACA,cAAMb,QAAQ,GAAGJ,WAAW,CAACgB,MAAD,EAASD,UAAT,CAA5B;AACA,cAAMG,YAAY,GAAGtB,mBAAmB,CAACQ,QAAD,EAAW,IAAX,CAAxC;;AAEA,aAAK,MAAMe,OAAX,IAAsBD,YAAtB,EAAoC;AAClCL,UAAAA,QAAQ,CAACO,IAAT,CAAc,KAAKC,cAAL,CAAoB;AAACF,YAAAA;AAAD,WAApB,EAA+BH,MAA/B,EAAuCD,UAAU,CAACE,KAAlD,CAAd;AACD;AACF;;AAED,WAAKK,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACD;AACF;;AAEDU,EAAAA,aAAa,GAAG;AACd,WAAO;AACLX,MAAAA,IAAI,EAAE,KAAKY,KAAL,CAAWX,QADZ;AAELY,MAAAA,UAAU,EAAEtB,CAAC,IAAIA,CAAC,CAACgB;AAFd,KAAP;AAID;;AA7BsD;AAgCzDd,cAAc,CAACN,YAAf,GAA8BA,YAA9B;AACAM,cAAc,CAACqB,SAAf,GAA2B,gBAA3B","sourcesContent":["import {h3SetToMultiPolygon} from 'h3-js';\n\nimport {createIterable} from '@deck.gl/core';\nimport GeoCellLayer from '../geo-cell-layer/GeoCellLayer';\n\nconst defaultProps = {\n  getHexagons: {type: 'accessor', value: d => d.hexagons}\n};\n\nexport default class H3ClusterLayer extends GeoCellLayer {\n  updateState({props, oldProps, changeFlags}) {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggers && changeFlags.updateTriggers.getHexagons)\n    ) {\n      const {data, getHexagons} = props;\n      const polygons = [];\n\n      const {iterable, objectInfo} = createIterable(data);\n      for (const object of iterable) {\n        objectInfo.index++;\n        const hexagons = getHexagons(object, objectInfo);\n        const multiPolygon = h3SetToMultiPolygon(hexagons, true);\n\n        for (const polygon of multiPolygon) {\n          polygons.push(this.getSubLayerRow({polygon}, object, objectInfo.index));\n        }\n      }\n\n      this.setState({polygons});\n    }\n  }\n\n  indexToBounds() {\n    return {\n      data: this.state.polygons,\n      getPolygon: d => d.polygon\n    };\n  }\n}\n\nH3ClusterLayer.defaultProps = defaultProps;\nH3ClusterLayer.layerName = 'H3ClusterLayer';\n"],"file":"h3-cluster-layer.js"}