{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["DEFAULT_FONT_SETTINGS","fontSize","DEFAULT_FONT_SIZE","buffer","DEFAULT_BUFFER","sdf","radius","DEFAULT_RADIUS","cutoff","DEFAULT_CUTOFF","smoothing","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","DEFAULT_LINE_HEIGHT","FONT_SETTINGS_PROPS","defaultProps","billboard","sizeScale","sizeUnits","sizeMinPixels","sizeMaxPixels","Number","MAX_SAFE_INTEGER","background","getBackgroundColor","type","value","getBorderColor","getBorderWidth","backgroundPadding","characterSet","DEFAULT_CHAR_SET","fontFamily","DEFAULT_FONT_FAMILY","fontWeight","DEFAULT_FONT_WEIGHT","lineHeight","outlineWidth","min","outlineColor","fontSettings","wordBreak","maxWidth","getText","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","backgroundColor","deprecatedFor","TextLayer","state","styleVersion","fontAtlasManager","FontAtlasManager","props","oldProps","changeFlags","textChanged","dataChanged","updateTriggersChanged","all","oldCharacterSet","_updateText","fontChanged","_fontChanged","_updateFontAtlas","styleChanged","setState","info","object","index","data","setProps","oldFontSettings","some","prop","textBuffer","attributes","startIndices","numInstances","autoCharacterSet","Set","ArrayBuffer","isView","length","texts","characterCount","_","iterable","objectInfo","Array","from","forEach","add","push","iconMapping","mapping","paragraph","size","width","height","anchorX","anchorY","y","rowWidth","numCharacters","offsets","i","rowOffset","scale","texture","_dataDiff","transitions","updateTriggers","CharactersLayerClass","getSubLayerClass","MultiIconLayer","BackgroundLayerClass","TextBackgroundLayer","getFillColor","getLineColor","getLineWidth","padding","getSubLayerProps","id","getBoundingRect","autoHighlight","bind","isFinite","iconAtlas","getIcon","getIconOffsets","limit","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, createIterable} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport FontAtlasManager, {\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_BUFFER,\n  DEFAULT_RADIUS,\n  DEFAULT_CUTOFF,\n  setFontAtlasCacheLimit\n} from './font-atlas-manager';\nimport {transformParagraph, getTextFromBuffer} from './utils';\n\nimport TextBackgroundLayer from './text-background-layer/text-background-layer';\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: DEFAULT_FONT_SIZE,\n  buffer: DEFAULT_BUFFER,\n  sdf: false,\n  radius: DEFAULT_RADIUS,\n  cutoff: DEFAULT_CUTOFF,\n  smoothing: 0.1\n};\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst DEFAULT_LINE_HEIGHT = 1.0;\n\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n\n  background: false,\n  getBackgroundColor: {type: 'accessor', value: [255, 255, 255, 255]},\n  getBorderColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getBorderWidth: {type: 'accessor', value: 0},\n  backgroundPadding: {type: 'array', value: [0, 0, 0, 0]},\n\n  characterSet: {type: 'object', value: DEFAULT_CHAR_SET},\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  outlineWidth: {type: 'number', value: 0, min: 0},\n  outlineColor: {type: 'color', value: DEFAULT_COLOR},\n  fontSettings: {},\n\n  // auto wrapping options\n  wordBreak: 'break-word',\n  maxWidth: {type: 'number', value: -1},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]},\n\n  // deprecated\n  backgroundColor: {deprecatedFor: ['background', 'getBackgroundColor']}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new FontAtlasManager()\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  updateState({props, oldProps, changeFlags}) {\n    const textChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText));\n    const oldCharacterSet = this.state.characterSet;\n\n    if (textChanged) {\n      this._updateText();\n    }\n\n    const fontChanged =\n      oldCharacterSet !== this.state.characterSet || this._fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this._updateFontAtlas(oldProps, props);\n    }\n\n    const styleChanged =\n      fontChanged ||\n      props.lineHeight !== oldProps.lineHeight ||\n      props.wordBreak !== oldProps.wordBreak ||\n      props.maxWidth !== oldProps.maxWidth;\n\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    info.object = info.index >= 0 ? this.props.data[info.index] : null;\n    return info;\n  }\n\n  _updateFontAtlas(oldProps, props) {\n    const {fontSettings, fontFamily, fontWeight} = props;\n\n    // generate test characterSet\n    const {fontAtlasManager, characterSet} = this.state;\n    fontAtlasManager.setProps({\n      ...DEFAULT_FONT_SETTINGS,\n      ...fontSettings,\n      characterSet,\n      fontFamily,\n      fontWeight\n    });\n  }\n\n  _fontChanged(oldProps, props) {\n    if (oldProps.fontFamily !== props.fontFamily || oldProps.fontWeight !== props.fontWeight) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  // Text strings are variable width objects\n  // Count characters and start offsets\n  _updateText() {\n    const {data, characterSet} = this.props;\n    const textBuffer = data.attributes && data.attributes.getText;\n    let {getText} = this.props;\n    let {startIndices} = data;\n    let numInstances;\n\n    const autoCharacterSet = characterSet === 'auto' && new Set();\n\n    if (textBuffer && startIndices) {\n      const {texts, characterCount} = getTextFromBuffer({\n        ...(ArrayBuffer.isView(textBuffer) ? {value: textBuffer} : textBuffer),\n        length: data.length,\n        startIndices,\n        characterSet: autoCharacterSet\n      });\n      numInstances = characterCount;\n      getText = (_, {index}) => texts[index];\n    } else {\n      const {iterable, objectInfo} = createIterable(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        // Break into an array of characters\n        // When dealing with double-length unicode characters, `str.length` or `str[i]` do not work\n        const text = Array.from(getText(object, objectInfo) || '');\n        if (autoCharacterSet) {\n          text.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n        numInstances += text.length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({\n      getText,\n      startIndices,\n      numInstances,\n      characterSet: autoCharacterSet || characterSet\n    });\n  }\n\n  // Returns the x, y offsets of each character in a text string\n  getBoundingRect(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {getText} = this.state;\n    const {wordBreak, maxWidth, lineHeight, getTextAnchor, getAlignmentBaseline} = this.props;\n\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      size: [width, height]\n    } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX =\n      TEXT_ANCHOR[\n        typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor\n      ];\n    const anchorY =\n      ALIGNMENT_BASELINE[\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(object, objectInfo)\n          : getAlignmentBaseline\n      ];\n\n    return [((anchorX - 1) * width) / 2, ((anchorY - 1) * height) / 2, width, height];\n  }\n\n  // Returns the x, y, w, h of each text object\n  getIconOffsets(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {getText} = this.state;\n    const {wordBreak, maxWidth, lineHeight, getTextAnchor, getAlignmentBaseline} = this.props;\n\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      x,\n      y,\n      rowWidth,\n      size: [width, height]\n    } = transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX =\n      TEXT_ANCHOR[\n        typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor\n      ];\n    const anchorY =\n      ALIGNMENT_BASELINE[\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(object, objectInfo)\n          : getAlignmentBaseline\n      ];\n\n    const numCharacters = x.length;\n    const offsets = new Array(numCharacters * 2);\n    let index = 0;\n\n    for (let i = 0; i < numCharacters; i++) {\n      // For a multi-line object, offset in x-direction needs consider\n      // the row offset in the paragraph and the object offset in the row\n      const rowOffset = ((1 - anchorX) * (width - rowWidth[i])) / 2;\n      offsets[index++] = ((anchorX - 1) * width) / 2 + rowOffset + x[i];\n      offsets[index++] = ((anchorY - 1) * height) / 2 + y[i];\n    }\n    return offsets;\n  }\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {scale, texture, mapping},\n      styleVersion\n    } = this.state;\n\n    const {\n      data,\n      _dataDiff,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      getBackgroundColor,\n      getBorderColor,\n      getBorderWidth,\n      backgroundPadding,\n      background,\n      billboard,\n      fontSettings,\n      outlineWidth,\n      outlineColor,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const CharactersLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n    const BackgroundLayerClass = this.getSubLayerClass('background', TextBackgroundLayer);\n\n    return [\n      background &&\n        new BackgroundLayerClass(\n          {\n            // background props\n            getFillColor: getBackgroundColor,\n            getLineColor: getBorderColor,\n            getLineWidth: getBorderWidth,\n            padding: backgroundPadding,\n\n            // props shared with characters layer\n            getPosition,\n            getSize,\n            getAngle,\n            getPixelOffset,\n            billboard,\n            sizeScale: sizeScale / this.state.fontAtlasManager.props.fontSize,\n            sizeUnits,\n            sizeMinPixels,\n            sizeMaxPixels,\n\n            transitions: transitions && {\n              getPosition: transitions.getPosition,\n              getAngle: transitions.getAngle,\n              getSize: transitions.getSize,\n              getFillColor: transitions.getBackgroundColor,\n              getLineColor: transitions.getBorderColor,\n              getLineWidth: transitions.getBorderWidth,\n              getPixelOffset: transitions.getPixelOffset\n            }\n          },\n          this.getSubLayerProps({\n            id: 'background',\n            updateTriggers: {\n              getPosition: updateTriggers.getPosition,\n              getAngle: updateTriggers.getAngle,\n              getSize: updateTriggers.getSize,\n              getFillColor: updateTriggers.getBackgroundColor,\n              getLineColor: updateTriggers.getBorderColor,\n              getLineWidth: updateTriggers.getBorderWidth,\n              getPixelOffset: updateTriggers.getPixelOffset,\n              getBoundingRect: {\n                getText: updateTriggers.getText,\n                getTextAnchor: updateTriggers.getTextAnchor,\n                getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n                styleVersion\n              }\n            }\n          }),\n          {\n            data:\n              data.attributes && data.attributes.background\n                ? {length: data.length, attributes: data.attributes.background}\n                : data,\n            _dataDiff,\n            // Maintain the same background behavior as <=8.3. Remove in v9?\n            autoHighlight: false,\n            getBoundingRect: this.getBoundingRect.bind(this)\n          }\n        ),\n      new CharactersLayerClass(\n        {\n          sdf: fontSettings.sdf,\n          smoothing: Number.isFinite(fontSettings.smoothing)\n            ? fontSettings.smoothing\n            : DEFAULT_FONT_SETTINGS.smoothing,\n          outlineWidth,\n          outlineColor,\n          iconAtlas: texture,\n          iconMapping: mapping,\n\n          getPosition,\n          getColor,\n          getSize,\n          getAngle,\n          getPixelOffset,\n\n          billboard,\n          sizeScale: sizeScale * scale,\n          sizeUnits,\n          sizeMinPixels: sizeMinPixels * scale,\n          sizeMaxPixels: sizeMaxPixels * scale,\n\n          transitions: transitions && {\n            getPosition: transitions.getPosition,\n            getAngle: transitions.getAngle,\n            getColor: transitions.getColor,\n            getSize: transitions.getSize,\n            getPixelOffset: transitions.getPixelOffset\n          }\n        },\n        this.getSubLayerProps({\n          id: 'characters',\n          updateTriggers: {\n            getIcon: updateTriggers.getText,\n            getPosition: updateTriggers.getPosition,\n            getAngle: updateTriggers.getAngle,\n            getColor: updateTriggers.getColor,\n            getSize: updateTriggers.getSize,\n            getPixelOffset: updateTriggers.getPixelOffset,\n            getIconOffsets: {\n              getText: updateTriggers.getText,\n              getTextAnchor: updateTriggers.getTextAnchor,\n              getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n              styleVersion\n            }\n          }\n        }),\n        {\n          data,\n          _dataDiff,\n          startIndices,\n          numInstances,\n          getIconOffsets: this.getIconOffsets.bind(this),\n          getIcon: getText\n        }\n      )\n    ];\n  }\n\n  static set fontAtlasCacheLimit(limit) {\n    setFontAtlasCacheLimit(limit);\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}