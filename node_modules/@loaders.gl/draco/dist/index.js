"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._TypecheckDracoLoader = exports.DracoLoader = exports.DracoWorkerLoader = exports.DracoWriter = void 0;
const draco_loader_1 = require("./draco-loader");
Object.defineProperty(exports, "DracoWorkerLoader", { enumerable: true, get: function () { return draco_loader_1.DracoLoader; } });
const draco_parser_1 = __importDefault(require("./lib/draco-parser"));
const draco_module_loader_1 = require("./lib/draco-module-loader");
var draco_writer_1 = require("./draco-writer");
Object.defineProperty(exports, "DracoWriter", { enumerable: true, get: function () { return draco_writer_1.DracoWriter; } });
/**
 * Loader for Draco3D compressed geometries
 */
exports.DracoLoader = {
    ...draco_loader_1.DracoLoader,
    parse
};
async function parse(arrayBuffer, options) {
    const { draco } = await (0, draco_module_loader_1.loadDracoDecoderModule)(options);
    const dracoParser = new draco_parser_1.default(draco);
    try {
        return dracoParser.parseSync(arrayBuffer, options?.draco);
    }
    finally {
        dracoParser.destroy();
    }
}
// TYPE TESTS - TODO find a better way than exporting junk
exports._TypecheckDracoLoader = exports.DracoLoader;
